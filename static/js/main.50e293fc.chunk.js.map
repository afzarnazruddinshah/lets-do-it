{"version":3,"sources":["common/constants.js","components/PriorityIcons/PriorityIcons.js","components/Card/CardItem.js","components/Logo/logo.js","components/SideNavigationBar/SideNavigationBar.js","components/Dialog/Dialog.js","components/Menu/Menu.js","components/Todo/Todo.js","common/generateRandomUuid.js","redux/actions/ActionTypes.js","components/Todo/TodoContainer.js","redux/actions/todoActions.js","redux/actions/templatesActions.js","App.js","redux/reducers/todoReducer.js","redux/reducers/templatesReducer.js","redux/reducers/rootReducer.js","index.js"],"names":["HIGH_PRIORITY","LOW_PRIORITY","MEDIUM_PRIORITY","TODO","DONE","withStyles","theme","highPriority","color","position","verticalAlign","top","fontSize","mediumPriority","lowPriority","classes","priority","className","root","margin","chip","borderRadius","padding","backgroundColor","chipTodo","chipDone","icon","cursor","doneTickIcon","props","label","status","itemId","onClick","onDelete","itemPriority","Chip","deleteIcon","Logo","style","userSelect","list","width","fullList","isOpen","onClose","Fragment","Drawer","anchor","open","role","List","ListItem","button","ListItemIcon","ListItemText","primary","Divider","Dialog","dialogProps","onClickNo","DialogTitle","id","title","DialogContent","DialogContentText","contentText","children","DialogActions","Button","onClickYes","autoFocus","menuBar","height","clearAllGrid","clearAllButton","textTransform","loadTemplateGrid","paddingRight","saveTemplateGrid","loadTemplateButton","saveTemplateButton","clearAllIcon","onClearAll","isListAvailable","onSaveTemplate","useState","isModalOpen","setIsModalOpen","setDialogProps","templateNameRef","React","useRef","handleModalClose","handleSaveTemplate","saveTemplateDialogProps","clearAllDialogProps","console","log","current","value","TextField","inputRef","textField","variant","placeholder","Grid","container","direction","justifyContent","alignItems","spacing","item","size","disabled","Cached","Save","DeleteForever","logo","display","textAlign","marginTop","menuContainer","menuIcon","emptyList","appTitle","fontWeight","paddingLeft","header","marginBottom","grid1","grid2","grid3","inputContainer","input","border","addButton","addButtonIcon","formControl","formSelect","borderBottom","todoList","card","todoListCard","addItem","removeItem","today","date","clearAllItems","saveTemplate","addTaskTextField","todoItem","setTodoItem","setPriority","isMenuOpen","setIsMenuOpen","month","split","year","handleItemClick","ret","_","chain","find","merge","itemStatus","handleItemDelete","Typography","Card","onChange","e","target","FormControl","Select","labelId","disableUnderline","MenuItem","IconButton","replace","c","r","Math","random","toString","itemValue","focus","templateName","Boolean","length","onLoadTemplate","map","index","PriorityIcons","ADD_ITEM","REMOVE_ITEM","CLEAR_ALL_ITEMS","SAVE_TEMPLATE","connect","state","Date","toDateString","dispatch","type","payload","todoItemId","completeItem","template","Parent","Component","initState","todoReducer","action","filter","templatesReducer","rootReducer","combineReducers","templates","persistedState","serializedState","localStorage","getItem","JSON","parse","loadFromLocalStorage","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","subscribe","stringify","setItem","saveToLocalStorage","getState","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.50e293fc.chunk.js","sourcesContent":["export const HIGH_PRIORITY = \"HIGH_PRIORITY\";\r\nexport const LOW_PRIORITY = \"LOW_PRIORITY\";\r\nexport const MEDIUM_PRIORITY = \"MEDIUM_PRIORITY\";\r\nexport const TODO = \"To Do\";\r\nexport const DONE = \"Done\";\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport HighPriorityIcon from \"@material-ui/icons/NewReleases\";\r\nimport {} from \"../../common/constants\";\r\nimport { HIGH_PRIORITY, MEDIUM_PRIORITY } from \"./../../common/constants\";\r\n\r\nconst PriorityIcon = ({ classes, priority }) => {\r\n  return (\r\n    <HighPriorityIcon\r\n      className={\r\n        priority === HIGH_PRIORITY\r\n          ? classes.highPriority\r\n          : priority === MEDIUM_PRIORITY\r\n          ? classes.mediumPriority\r\n          : classes.lowPriority\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst styles = (theme) => ({\r\n  highPriority: {\r\n    color: \"red\",\r\n    position: 'relative',\r\n    verticalAlign: 'sub',\r\n    top: '-1px',\r\n    fontSize: '18px'\r\n  },\r\n  mediumPriority: {\r\n    color: \"yellow\",\r\n    position: 'relative',\r\n    verticalAlign: 'sub',\r\n    top: '-1px',\r\n    fontSize: '18px'\r\n  },\r\n  lowPriority: {\r\n    color: \"#55a630\",\r\n    position: 'relative',\r\n    verticalAlign: 'sub',\r\n    top: '-1px',\r\n    fontSize: '18px'\r\n  },\r\n  \r\n});\r\n\r\nexport default withStyles(styles)(PriorityIcon);\r\n","import React from \"react\";\r\nimport { withStyles, Chip } from \"@material-ui/core\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport { TODO } from \"../../common/constants\";\r\nimport PriorityIcon from \"../PriorityIcons/PriorityIcons\";\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\nconst CardItem = (props) => {\r\n  const { classes, label, status, itemId, onClick, onDelete, itemPriority } = props;\r\n\r\n  const handleItemClick = () => {\r\n    onClick(itemId);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n      onDelete(itemId);\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <Chip\r\n        icon={<DeleteOutlineIcon className={classes.icon} fontSize=\"small\" onClick={handleDelete} />}\r\n        className={status === TODO ? classes.chip : classes.chipDone}\r\n        color=\"primary\"\r\n        label={<span> {label} <PriorityIcon priority={itemPriority} /></span>}\r\n        onDelete={handleItemClick}\r\n        deleteIcon={status === TODO ? <CheckCircleOutlineIcon className={classes.chipTodo}/> :<CheckCircleIcon fontSize=\"large\" className={classes.doneTickIcon}/>}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: \"20px\",\r\n  },\r\n  chip: {\r\n    color: \"#f1faee\",\r\n    borderRadius: \"10px\",\r\n    fontSize: \"16px\",\r\n    padding: \"20px 5px 20px 5px\",\r\n    backgroundColor: \"#1d3557\",\r\n    '& .MuiChip-label': {\r\n      padding: \"10px 40px 10px 10px\"\r\n    }\r\n  },\r\n  chipTodo: {\r\n      color: '#f1faee'\r\n  },\r\n  chipDone: {\r\n    color: \"#f1faee\",\r\n    borderRadius: \"10px\",\r\n    backgroundColor: \"#55a630\",\r\n    fontSize: \"16px\",\r\n    padding: \"20px 5px 20px 5px\",\r\n    '& .MuiChip-label': {\r\n      padding: \"10px 40px 10px 10px\"\r\n    }\r\n  },\r\n  icon: {\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      color: 'red'\r\n    }\r\n  },\r\n  doneTickIcon: {\r\n    color: \"green\",\r\n    fontSize: \"20px\"\r\n  }\r\n});\r\nexport default withStyles(styles)(CardItem);\r\n","import React from 'react';\r\nimport './logo.scss';\r\n\r\nconst Logo = (props) => {\r\n    return ( \r\n        <>\r\n        <h4 style={{userSelect: 'none'}}><b><span>Let's  </span><span>DoIt</span></b></h4>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default Logo;","import { ListItem, List, ListItemIcon, ListItemText, Drawer, Divider} from '@material-ui/core';\r\nimport React from 'react';\r\nimport { withStyles } from '@material-ui/core';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nconst SideNavigationBar = ({isOpen, onClose}) => {\r\n  \r\n    const handleClose = () => {\r\n        onClose();\r\n    }\r\n    \r\n    const list = () => (\r\n      <div\r\n        role=\"presentation\"\r\n      >\r\n        <List>\r\n          {\r\n            <ListItem button key={'menu-item-1'}>\r\n              <ListItemIcon>{<InboxIcon />}</ListItemIcon>\r\n              <ListItemText primary={'Archives'} />\r\n            </ListItem>}\r\n        </List>\r\n        <Divider />\r\n      </div>\r\n    );\r\n  \r\n    return (\r\n      <div>\r\n          <React.Fragment key={'left-menu-bar'}>\r\n            <Drawer anchor={'left'} open={isOpen} onClose={handleClose}>\r\n                {list()}\r\n            </Drawer>\r\n          </React.Fragment>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const styles = theme =>({\r\n    list: {\r\n      width: 250,\r\n    },\r\n    fullList: {\r\n      width: 'auto',\r\n    },\r\n  });\r\n\r\n  export default withStyles(styles)(SideNavigationBar);","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog as MuiDialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\n\r\nconst Dialog = (props) => {\r\n  const { dialogProps, isOpen } = props;\r\n\r\n  const handleClickYes = () => {\r\n    dialogProps.onClickYes();\r\n  };\r\n\r\n  const handleClickNo = () => {\r\n    dialogProps.onClickNo();\r\n  };\r\n\r\n  return (\r\n    <MuiDialog\r\n      open={isOpen}\r\n      onClose={dialogProps.onClickNo}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{dialogProps.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {dialogProps.contentText}\r\n        </DialogContentText>\r\n        {dialogProps.children}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClickNo} color=\"default\">\r\n          No\r\n        </Button>\r\n        <Button onClick={handleClickYes} color=\"primary\" autoFocus>\r\n          Yes\r\n        </Button>\r\n      </DialogActions>\r\n    </MuiDialog>\r\n  );\r\n};\r\n\r\nexport default Dialog;\r\n","import { Grid, Button, TextField } from \"@material-ui/core\";\r\nimport { DeleteForever, Save, Cached } from \"@material-ui/icons\";\r\nimport React, { useState } from \"react\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport Dialog from \"./../Dialog/Dialog\";\r\n\r\nconst Menu = (props) => {\r\n  const { classes, onClearAll, isListAvailable, onSaveTemplate } = props;\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [dialogProps, setDialogProps] = useState({\r\n    title: \"\",\r\n    contentText: \"\",\r\n  });\r\n  const templateNameRef = React.useRef(null);\r\n\r\n  const handleModalClose = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleClearAllClick = () => {\r\n    setDialogProps(clearAllDialogProps);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleClearAllAgree = () => {\r\n    setIsModalOpen(false);\r\n    onClearAll();\r\n  };\r\n\r\n  const handleSaveTemplate = () => {\r\n    setDialogProps(saveTemplateDialogProps);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleSaveTemplateAgree = () => {\r\n    console.log(templateNameRef.current.value);\r\n    setIsModalOpen(false);\r\n    onSaveTemplate(templateNameRef.current.value);\r\n  };\r\n\r\n  // const handleLoadTemplateAgree = () => {\r\n  //   setIsModalOpen(false);\r\n  //   onSaveTemplate(templateNameRef.current.value);\r\n  // };\r\n\r\n  // const loadTemplateDialogProps = {\r\n  //   title: \"Select a Template\",\r\n  //   onClickYes: () => handleLoadTemplateAgree(),\r\n  //   onClickNo: () => handleModalClose(),\r\n  // };\r\n\r\n  const clearAllDialogProps = {\r\n    title: \"Confirm Clear All?\",\r\n    contentText: \"This will delete all your to-do items beyond recovery\",\r\n    children: \"\",\r\n    onClickYes: () => handleClearAllAgree(),\r\n    onClickNo: () => handleModalClose(),\r\n  };\r\n\r\n  const saveTemplateDialogProps = {\r\n    title: \"Save Template\",\r\n    contentText: \"Please enter a name\",\r\n    onClickYes: () => handleSaveTemplateAgree(),\r\n    onClickNo: () => handleModalClose(),\r\n    children: (\r\n      <TextField\r\n        id=\"template-input\"\r\n        inputRef={templateNameRef}\r\n        className={classes.textField}\r\n        variant=\"outlined\"\r\n        placeholder={\"Template Name\"}\r\n      />\r\n    ),\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"flex-end\"\r\n        alignItems=\"center\"\r\n        spacing={3}\r\n        className={classes.menuBar}\r\n      >\r\n        <Grid item className={classes.loadTemplateGrid}>\r\n          <Button\r\n            size=\"small\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled\r\n            onClick={handleSaveTemplate}\r\n            className={classes.loadTemplateButton}\r\n          >\r\n            Load Template\r\n            <Cached className={classes.clearAllIcon} fontSize=\"small\" />\r\n          </Button>\r\n        </Grid>\r\n        <Grid item className={classes.saveTemplateGrid}>\r\n          <Button\r\n            size=\"small\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleSaveTemplate}\r\n            disabled={!isListAvailable}\r\n            className={classes.saveTemplateButton}\r\n          >\r\n            Save as Template\r\n            <Save className={classes.clearAllIcon} fontSize=\"small\" />\r\n          </Button>\r\n        </Grid>\r\n        <Grid item className={classes.clearAllGrid}>\r\n          <Button\r\n            size=\"small\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleClearAllClick}\r\n            disabled={!isListAvailable}\r\n            className={classes.clearAllButton}\r\n          >\r\n            Clear All\r\n            <DeleteForever className={classes.clearAllIcon} fontSize=\"small\" />\r\n          </Button>\r\n        </Grid>\r\n        <Dialog isOpen={isModalOpen} dialogProps={dialogProps} />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = (theme) => ({\r\n  menuBar: {\r\n    width: \"100%\",\r\n    margin: \"0px\",\r\n    padding: \"10px\",\r\n    height: \"40px\",\r\n    borderRadius: \"20px 20px 0px 0px\",\r\n  },\r\n  clearAllGrid: {\r\n    padding: \"0px !important\",\r\n  },\r\n  clearAllButton: {\r\n    textTransform: \"none\",\r\n    fontSize: '12px',\r\n    backgroundColor: \"#e63946\",\r\n    borderRadius: \"5px 20px 5px 5px\",\r\n  },\r\n  loadTemplateGrid: {\r\n    padding: \"0px !important\",\r\n    paddingRight: \"7px !important\",\r\n  },\r\n  saveTemplateGrid: {\r\n    padding: \"0px !important\",\r\n    paddingRight: \"7px !important\",\r\n  },\r\n  loadTemplateButton: {\r\n    textTransform: \"none\",\r\n    backgroundColor: \"#e63946\",\r\n    fontSize: '12px',\r\n    borderRadius: \"20px 5px 5px 5px\",\r\n  },\r\n  saveTemplateButton: {\r\n    textTransform: \"none\",\r\n    fontSize: '12px',\r\n    backgroundColor: \"#e63946\",\r\n    borderRadius: \"5px 5px 5px 5px\",\r\n  },\r\n  clearAllIcon: {\r\n    verticalAlign: \"top\",\r\n    position: \"relative\",\r\n    top: \"-1px\",\r\n  },\r\n});\r\n\r\nexport default withStyles(styles)(Menu);\r\n","import React from \"react\";\r\nimport {\r\n  Typography,\r\n  withStyles,\r\n  TextField,\r\n  Grid,\r\n  Card,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport _ from \"lodash\";\r\nimport CardItem from \"../Card/CardItem\";\r\nimport { generateRandomUuid } from \"../../common/generateRandomUuid\";\r\nimport {\r\n  HIGH_PRIORITY,\r\n  LOW_PRIORITY,\r\n  MEDIUM_PRIORITY,\r\n} from \"../../common/constants\";\r\nimport PriorityIcon from \"../PriorityIcons/PriorityIcons\";\r\nimport PriorityIcons from \"../PriorityIcons/PriorityIcons\";\r\nimport Logo from \"../Logo/logo\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SideNavigationBar from \"../SideNavigationBar/SideNavigationBar\";\r\nimport { TODO, DONE } from \"../../common/constants\";\r\nimport Menu from \"../Menu/Menu\";\r\n\r\nconst Todo = (props) => {\r\n  const {\r\n    classes,\r\n    addItem,\r\n    removeItem,\r\n    todoList,\r\n    date: today,\r\n    clearAllItems,\r\n    saveTemplate\r\n  } = props;\r\n  const addTaskTextField = React.useRef(null);\r\n  const [todoItem, setTodoItem] = React.useState(\"\");\r\n  const [priority, setPriority] = React.useState(MEDIUM_PRIORITY);\r\n  const [isMenuOpen, setIsMenuOpen] = React.useState(false);\r\n  const month = today.split(\" \")[1];\r\n  const date = today.split(\" \")[2];\r\n  const year = today.split(\" \")[3];\r\n\r\n  const handleItemChange = (e) => {\r\n    setTodoItem(e.target.value);\r\n  };\r\n\r\n  const handleItemAdd = () => {\r\n    addItem({\r\n      itemId: generateRandomUuid(),\r\n      itemValue: todoItem,\r\n      itemStatus: TODO,\r\n      itemPriority: priority,\r\n    });\r\n    setTodoItem(\"\");\r\n    if (addTaskTextField.current) {\r\n      addTaskTextField.current.focus();\r\n    }\r\n  };\r\n\r\n  const handleItemClick = (itemId) => {\r\n    const ret = _.chain(todoList)\r\n      .find({ itemId: itemId })\r\n      .merge({ itemStatus: DONE })\r\n      .value();\r\n    removeItem(itemId);\r\n    addItem(ret);\r\n  };\r\n\r\n  const handleItemDelete = (itemId) => {\r\n    removeItem(itemId);\r\n  };\r\n\r\n  const handlePriorityChange = (e) => {\r\n    setPriority(e.target.value);\r\n  };\r\n\r\n  const handleMenuClick = () => {\r\n    setIsMenuOpen(true);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setIsMenuOpen(false);\r\n  };\r\n\r\n  const handleClearAll = () => {\r\n    clearAllItems();\r\n  };\r\n\r\n  const handleSaveTemplate = (templateName) => {\r\n    saveTemplate({ templateName, todoList});\r\n  };\r\n\r\n  const handleLoadTemplate = (templateName) => {\r\n    \r\n  }\r\n\r\n  console.log(props);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.header}>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"flex-start\"\r\n          alignItems=\"center\"\r\n          spacing={3}\r\n          className={classes.inputContainer}\r\n        >\r\n          <Grid\r\n            onClick={handleMenuClick}\r\n            item\r\n            className={classes.menuContainer}\r\n          >\r\n            {\" \"}\r\n            <MenuIcon fontSize=\"large\" className={classes.menuIcon} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Logo />{\" \"}\r\n            <Typography className={classes.appTitle} variant=\"caption\">\r\n              {`${month} ${date} ${year}`}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <div className={classes.input}>\r\n        <Card className={classes.card}>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\"\r\n            spacing={3}\r\n            className={classes.inputContainer}\r\n          >\r\n            <Grid item className={classes.grid1}>\r\n              <TextField\r\n                value={todoItem}\r\n                id=\"input\"\r\n                inputRef={addTaskTextField}\r\n                className={classes.textField}\r\n                variant=\"outlined\"\r\n                onChange={handleItemChange}\r\n                placeholder={\"What's on your list..\"}\r\n              />\r\n            </Grid>\r\n            <Grid item className={classes.grid2}>\r\n              <FormControl className={classes.formControl}>\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  onChange={handlePriorityChange}\r\n                  value={priority}\r\n                  className={classes.formSelect}\r\n                  disableUnderline\r\n                >\r\n                  <MenuItem value={HIGH_PRIORITY}>\r\n                    <PriorityIcon priority={HIGH_PRIORITY} />\r\n                  </MenuItem>\r\n                  <MenuItem value={MEDIUM_PRIORITY}>\r\n                    <PriorityIcon priority={MEDIUM_PRIORITY} />\r\n                  </MenuItem>\r\n                  <MenuItem value={LOW_PRIORITY}>\r\n                    <PriorityIcon priority={LOW_PRIORITY} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item className={classes.grid3}>\r\n              <IconButton\r\n                aria-label=\"add-item\"\r\n                className={classes.addButton}\r\n                size=\"small\"\r\n                onClick={handleItemAdd}\r\n              >\r\n                <DoneIcon className={classes.addButtonIcon} fontSize=\"small\" />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Card>\r\n        <div className={classes.todoList}>\r\n          <Card className={classes.todoListCard}>\r\n            <Menu\r\n              onSaveTemplate={handleSaveTemplate}\r\n              isListAvailable={Boolean(todoList.length)}\r\n              onClearAll={handleClearAll}\r\n              onLoadTemplate={handleLoadTemplate}\r\n            />\r\n            {todoList.map((todoItem, index) => (\r\n              <CardItem\r\n                itemId={todoItem.itemId}\r\n                itemPriority={todoItem.itemPriority}\r\n                onClick={handleItemClick}\r\n                onDelete={handleItemDelete}\r\n                key={index}\r\n                label={todoItem.itemValue}\r\n                status={todoItem.itemStatus}\r\n              />\r\n            ))}\r\n            {todoList.length === 0 && (\r\n              <p className={classes.emptyList}>\r\n                <PriorityIcons priority={HIGH_PRIORITY} /> Rest in the end, not\r\n                in the Middle.\r\n              </p>\r\n            )}\r\n          </Card>\r\n          {/* {todoList.length === 0 && <p>It Feels empty here :(</p>} */}\r\n        </div>\r\n      </div>\r\n      <SideNavigationBar onClose={handleMenuClose} isOpen={isMenuOpen} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    margin: \"auto\",\r\n    padding: \"10px\",\r\n  },\r\n  logo: {\r\n    width: \"60px\",\r\n    height: \"30px\",\r\n    display: \"inline-block\",\r\n  },\r\n\r\n  title: {\r\n    textAlign: \"center\",\r\n    // border: '1px solid red',\r\n    borderRadius: \"10px\",\r\n    marginTop: \"10%\",\r\n    padding: \"10px 10px 0px 10px\",\r\n    color: \"#f1faee\",\r\n  },\r\n  menuContainer: {\r\n    padding: \"0px !important\",\r\n  },\r\n  menuIcon: {\r\n    color: \"#f1faee\",\r\n    verticalAlign: \"bottom\",\r\n    position: \"relative\",\r\n    top: \"-10px\",\r\n  },\r\n  emptyList: {\r\n    textAlign: \"center\",\r\n    color: \"#e63946\",\r\n  },\r\n  appTitle: {\r\n    fontWeight: \"600\",\r\n    paddingLeft: \"2%\",\r\n    textAlign: \"center\",\r\n    color: \"#f1faee\",\r\n  },\r\n  header: {\r\n    margin: \"2%\",\r\n    marginBottom: \"15%\",\r\n  },\r\n  grid1: {\r\n    padding: \"12px !important\",\r\n  },\r\n  grid2: {\r\n    padding: \"12px !important\",\r\n  },\r\n  grid3: {\r\n    padding: \"12px 0px !important\",\r\n  },\r\n  inputContainer: {\r\n    padding: \"10px\",\r\n  },\r\n  input: {\r\n    margin: \"2%\",\r\n  },\r\n  textField: {\r\n    \"& .MuiInputBase-root\": {\r\n      borderRadius: \"20px\",\r\n      width: \"100%\",\r\n      height: \"50px\",\r\n      backgroundColor: \"#f1faee\",\r\n    },\r\n    \"&:hover\": {\r\n      border: \"#e63946\",\r\n    },\r\n  },\r\n  addButton: {\r\n    padding: \"10px\",\r\n    borderRadius: \"18px\",\r\n    backgroundColor: \"#e63946\",\r\n    color: \"#f1faee\",\r\n  },\r\n  addButtonIcon: {\r\n    borderRadius: \"10px\",\r\n  },\r\n  formControl: {\r\n    width: \"100%\",\r\n  },\r\n  formSelect: {\r\n    \"&\": {\r\n      borderBottom: \"none\",\r\n    },\r\n  },\r\n  todoList: {\r\n    width: \"100%\",\r\n    margin: \"auto\",\r\n  },\r\n  card: {\r\n    borderRadius: \"20px\",\r\n    backgroundColor: \"#a8dadc\",\r\n  },\r\n  todoListCard: {\r\n    borderRadius: \"20px\",\r\n    marginTop: \"10px\",\r\n    backgroundColor: \"#a8dadc\",\r\n  },\r\n});\r\nexport default withStyles(styles)(Todo);\r\n","export function generateRandomUuid() {\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n    var r = (Math.random() * 16) | 0,\r\n      v = c === \"x\" ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n}\r\n","export const ADD_ITEM = 'ADD_ITEM';\r\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\r\nexport const COMPLETE_ITEM = 'COMPLETE_ITEM';\r\nexport const CLEAR_ALL_ITEMS = 'CLEAR_ALL_ITEMS';\r\nexport const SAVE_TEMPLATE = 'SAVE_TEMPLATE';\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Todo from \"./Todo\";\r\nimport {\r\n  addItem,\r\n  removeItem,\r\n  completeItem,\r\n  clearAllItems,\r\n} from \"./../../redux/actions/todoActions\";\r\nimport { saveTemplate } from \"../../redux/actions/templatesActions\";\r\n\r\nconst TodoContainer = (props) => {\r\n  return (\r\n    <>\r\n      <Todo {...props} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  todoList: state.todoList,\r\n  date: new Date().toDateString(),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addItem: (todoItem) => dispatch(addItem(todoItem)),\r\n  removeItem: (todoItem) => dispatch(removeItem(todoItem)),\r\n  completeItem: (todoItem) => dispatch(completeItem(todoItem)),\r\n  clearAllItems: () => dispatch(clearAllItems()),\r\n  saveTemplate: (template) => dispatch(saveTemplate(template)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoContainer);\r\n","import { DONE } from \"../../common/constants\"\r\nimport { ADD_ITEM, CLEAR_ALL_ITEMS, COMPLETE_ITEM, REMOVE_ITEM } from \"./ActionTypes\"\r\n\r\nexport function addItem(todoItem)\r\n{\r\n    return {\r\n        type: ADD_ITEM,\r\n        payload: {\r\n            todoItem: todoItem\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeItem(todoItemId)\r\n{\r\n    return {\r\n        type: REMOVE_ITEM,\r\n        payload: {\r\n            todoItemId\r\n        }\r\n    }\r\n}\r\n\r\nexport function completeItem(todoItem)\r\n{\r\n    return {\r\n        type: COMPLETE_ITEM,\r\n        payload: {\r\n            todoItem: {...todoItem, itemStatus: DONE}\r\n        }\r\n    }\r\n}\r\n\r\nexport function clearAllItems(){\r\n    return {\r\n        type: CLEAR_ALL_ITEMS,\r\n        payload: {}\r\n    }\r\n}\r\n","import { SAVE_TEMPLATE } from \"./ActionTypes\";\r\n\r\nexport function saveTemplate(template){\r\n    return {\r\n        type: SAVE_TEMPLATE,\r\n        payload: {\r\n            template\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\nimport TodoContainer from \"./components/Todo/TodoContainer\";\n\nexport const RESTART = \"RESTART\";\nexport const PREV = \"PREV\";\nexport const NEXT = \"NEXT\";\nclass Parent extends Component {\n  render() {\n    return (\n      <>\n        <TodoContainer />\n      </>\n    );\n  }\n}\n\nexport default Parent;\n","import { ADD_ITEM, CLEAR_ALL_ITEMS, REMOVE_ITEM } from '../actions/ActionTypes';\r\nconst initState = [];\r\n\r\nconst todoReducer = (state=initState, action) =>\r\n{\r\n    switch(action.type){\r\n        case ADD_ITEM: return [...state, action.payload.todoItem]; \r\n        case REMOVE_ITEM: return state.filter((item) => item.itemId !== action.payload.todoItemId);\r\n        case CLEAR_ALL_ITEMS: return [];\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default todoReducer;\r\n","\r\nimport { SAVE_TEMPLATE } from '../actions/ActionTypes';\r\nconst initState = [];\r\n\r\nconst templatesReducer = (state=initState, action) =>\r\n{\r\n    switch(action.type){\r\n        case SAVE_TEMPLATE: return [...state, action.payload.template]\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default templatesReducer;\r\n","import todoReducer from './todoReducer';\r\nimport { combineReducers } from 'redux';\r\nimport templatesReducer from './templatesReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    templates: templatesReducer,\r\n    todoList: todoReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from './redux/reducers/rootReducer';\nfunction saveToLocalStorage(state) {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializedState);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction loadFromLocalStorage() {\n  try {\n    const serializedState = localStorage.getItem(\"state\");\n    if (serializedState == null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (e) {\n    console.log(e);\n    return undefined;\n  }\n}\n\nconst persistedState = loadFromLocalStorage();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport let store = createStore(\n  rootReducer,\n  persistedState,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nstore.subscribe( () => {\n  saveToLocalStorage(store.getState());\n});\n\nReactDOM.render(\n  <Provider  store={store} >\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}