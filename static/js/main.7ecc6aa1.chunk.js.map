{"version":3,"sources":["components/Card/CardItem.js","components/Todo/Todo.js","common/generateRandomUuid.js","redux/actions/todoActionTypes.js","components/Todo/TodoContainer.js","redux/actions/todoActions.js","App.js","redux/reducers/todoReducer.js","redux/reducers/rootReducer.js","index.js"],"names":["withStyles","theme","root","margin","border","chip","color","borderRadius","fontSize","padding","backgroundColor","chipTodo","chipDone","icon","cursor","doneTickIcon","props","classes","label","status","itemId","onClick","onDelete","className","Chip","TODO","deleteIcon","DONE","width","logo","height","display","title","textAlign","appTitle","fontWeight","header","marginBottom","inputContainer","input","textField","addButton","todoList","card","todoListCard","marginTop","console","log","addItem","removeItem","today","date","React","useState","todoItem","setTodoItem","month","split","year","handleItemClick","ret","_","chain","find","merge","itemStatus","value","handleItemDelete","Grid","item","Typography","variant","Card","container","direction","justifyContent","alignItems","spacing","TextField","id","onChange","e","target","placeholder","Button","replace","c","r","Math","random","toString","itemValue","map","index","ADD_ITEM","REMOVE_ITEM","connect","state","Date","toDateString","dispatch","type","payload","todoItemId","completeItem","Slides","defaultProps","initState","todoReducer","action","filter","rootReducer","combineReducers","persistedState","serializedState","localStorage","getItem","JSON","parse","loadFromLocalStorage","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","subscribe","stringify","setItem","saveToLocalStorage","getState","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.7ecc6aa1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { withStyles, Chip } from \"@material-ui/core\";\r\nimport { TODO } from \"../Todo/Todo\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\n\r\nconst CardItem = (props) => {\r\n  const { classes, label, status, itemId, onClick, onDelete } = props;\r\n\r\n  const handleItemClick = () => {\r\n    onClick(itemId);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n      onDelete(itemId);\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <Chip\r\n        icon={<DeleteOutlineIcon className={classes.icon} fontSize=\"small\" onClick={handleDelete} />}\r\n        className={status === TODO ? classes.chip : classes.chipDone}\r\n        color=\"primary\"\r\n        label={`  ${label}`}\r\n        onDelete={handleItemClick}\r\n        deleteIcon={status === TODO ? <CancelIcon className={classes.chipTodo}/> :<CheckCircleIcon fontSize=\"large\" className={classes.doneTickIcon}/>}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: \"20px\",\r\n    border: '1px solid #ccc',\r\n  },\r\n  chip: {\r\n    color: \"#f1faee\",\r\n    borderRadius: \"10px\",\r\n    fontSize: \"16px\",\r\n    padding: \"20px 5px 20px 5px\",\r\n    backgroundColor: \"#1d3557\",\r\n    '& .MuiChip-label': {\r\n      padding: \"10px 40px 10px 10px\"\r\n    }\r\n  },\r\n  chipTodo: {\r\n      color: '#e63946'\r\n  },\r\n  chipDone: {\r\n    color: \"#f1faee\",\r\n    borderRadius: \"10px\",\r\n    backgroundColor: \"#55a630\",\r\n    fontSize: \"16px\",\r\n    padding: \"20px 5px 20px 5px\",\r\n    '& .MuiChip-label': {\r\n      padding: \"10px 40px 10px 10px\"\r\n    }\r\n  },\r\n  icon: {\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      color: 'red'\r\n    }\r\n  },\r\n  doneTickIcon: {\r\n    color: \"green\",\r\n    fontSize: \"20px\"\r\n  }\r\n\r\n});\r\nexport default withStyles(styles)(CardItem);\r\n","import React from \"react\";\r\nimport {\r\n  Typography,\r\n  withStyles,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Card,\r\n} from \"@material-ui/core\";\r\nimport _ from \"lodash\";\r\nimport CardItem from \"../Card/CardItem\";\r\nimport { generateRandomUuid } from \"../../common/generateRandomUuid\";\r\nimport DoneIcon from '@material-ui/icons/Done';\r\n\r\nexport const TODO = \"To Do\";\r\nexport const DONE = \"Done\";\r\n\r\nconst Todo = (props) => {\r\n  console.log(props);\r\n  const { classes, addItem, removeItem, todoList, date:today } = props;\r\n  const [todoItem, setTodoItem] = React.useState(\"\");\r\n  const month = today.split(\" \")[1];\r\n  const date = today.split(\" \")[2];\r\n  const year = today.split(\" \")[3];\r\n\r\n  const handleItemChange = (e) => {\r\n    setTodoItem(e.target.value);\r\n  };\r\n\r\n  const handleItemAdd = () => {\r\n    addItem({ itemId: generateRandomUuid(), itemValue: todoItem, itemStatus: TODO });\r\n    setTodoItem(\"\");\r\n  };\r\n\r\n  const handleItemClick = (itemId) => {\r\n    const ret = _.chain(todoList)\r\n      .find({ itemId: itemId })\r\n      .merge({ itemStatus: DONE })\r\n      .value();\r\n    removeItem(itemId);\r\n    addItem(ret);\r\n    \r\n  };\r\n\r\n  const handleItemDelete = (itemId) => {\r\n    removeItem(itemId);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.header}>\r\n        <Grid item className={classes.title}>\r\n          <Typography className={classes.appTitle} variant=\"h5\">\r\n            {`${month} ${date} ${year}`}\r\n          </Typography>\r\n        </Grid>\r\n      </div>\r\n      <div className={classes.input}>\r\n      <Card className={classes.card}>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          spacing={3}\r\n          className={classes.inputContainer}\r\n        >\r\n          <Grid item>\r\n            <TextField\r\n              value={todoItem}\r\n              id=\"input\"\r\n              className={classes.textField}\r\n              variant=\"outlined\"\r\n              onChange={handleItemChange}\r\n              placeholder={\"What's on your list..\"}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            {\" \"}\r\n            <Button\r\n              className={classes.addButton}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              <DoneIcon onClick={handleItemAdd} />\r\n              \r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        </Card>\r\n        <div className={classes.todoList}>\r\n        <Card className={classes.todoListCard}>\r\n          {todoList.map((todoItem, index) => (\r\n            <CardItem\r\n              itemId={todoItem.itemId}\r\n              onClick={handleItemClick}\r\n              onDelete={handleItemDelete}\r\n              key={index}\r\n              label={todoItem.itemValue}\r\n              status={todoItem.itemStatus}\r\n            />\r\n          ))}\r\n          </Card>\r\n      </div>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    margin: \"auto\",\r\n    padding: \"10px\"\r\n  },\r\n  logo: {\r\n    width: \"60px\",\r\n    height: \"30px\",\r\n    display: \"inline-block\",\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n    // border: '1px solid red',\r\n    borderRadius: \"10px\",\r\n    padding: \"10px\",\r\n    color: \"#f1faee\"\r\n  },\r\n  appTitle: {\r\n    fontWeight: \"800\",\r\n    color: \"#f1faee\"\r\n  },\r\n  header: {\r\n    margin: \"2%\",\r\n    marginBottom: \"10%\"\r\n  },\r\n  inputContainer: {\r\n    padding: '10px'\r\n  },\r\n  input: {\r\n    margin: \"2%\",\r\n  },\r\n  textField: {\r\n    \"& .MuiInputBase-root\": {\r\n      borderRadius: \"20px\",\r\n      width: \"120%\",\r\n      height: \"50px\",\r\n      backgroundColor: \"#f1faee\"\r\n    },\r\n    '&:hover': {\r\n      border: \"#e63946\"\r\n    }\r\n  },\r\n  addButton: {\r\n    padding: \"10px 20px\",\r\n    borderRadius: \"20px\",\r\n    backgroundColor: \"#e63946\"\r\n  },\r\n  todoList: {\r\n    width: \"100%\",\r\n    margin: \"auto\",\r\n  },\r\n  card: {\r\n    borderRadius: \"20px\",\r\n    backgroundColor: \"#a8dadc\"\r\n  },\r\n  todoListCard: {\r\n    borderRadius: \"20px\",\r\n    marginTop: \"10px\",\r\n    backgroundColor: \"#a8dadc\"\r\n  }\r\n});\r\nexport default withStyles(styles)(Todo);\r\n","export function generateRandomUuid() {\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n    var r = (Math.random() * 16) | 0,\r\n      v = c === \"x\" ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n}\r\n","export const ADD_ITEM = 'ADD_ITEM';\r\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\r\nexport const COMPLETE_ITEM = 'COMPLETE_ITEM';\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Todo from './Todo';\r\nimport { addItem, removeItem, completeItem } from './../../redux/actions/todoActions';\r\n\r\nconst TodoContainer = (props) => {\r\n    return ( \r\n    <>\r\n    <Todo {...props} /> \r\n    </>\r\n    \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    todoList: state.todoList,\r\n    date: new Date().toDateString()\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    addItem: (todoItem) => dispatch(addItem(todoItem)),\r\n    removeItem:(todoItem) =>  dispatch(removeItem(todoItem)),\r\n    completeItem: (todoItem) => dispatch(completeItem(todoItem))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoContainer);","import { DONE } from \"../../components/Todo/Todo\"\r\nimport { ADD_ITEM, COMPLETE_ITEM, REMOVE_ITEM } from \"./todoActionTypes\"\r\n\r\nexport function addItem(todoItem)\r\n{\r\n    return {\r\n        type: ADD_ITEM,\r\n        payload: {\r\n            todoItem: todoItem\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeItem(todoItemId)\r\n{\r\n    return {\r\n        type: REMOVE_ITEM,\r\n        payload: {\r\n            todoItemId\r\n        }\r\n    }\r\n}\r\n\r\nexport function completeItem(todoItem)\r\n{\r\n    return {\r\n        type: COMPLETE_ITEM,\r\n        payload: {\r\n            todoItem: {...todoItem, itemStatus: DONE}\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\nimport TodoContainer from './components/Todo/TodoContainer';\n\nexport const RESTART = \"RESTART\";\nexport const PREV = \"PREV\";\nexport const NEXT = \"NEXT\";\nfunction Slides(props) {\n\n  return (\n   <TodoContainer />\n  );\n}\n\nSlides.defaultProps = {\n};\n\nexport default Slides;\n","\r\nimport { ADD_ITEM, REMOVE_ITEM } from './../actions/todoActionTypes';\r\nconst initState = [];\r\n\r\nconst todoReducer = (state=initState, action) =>\r\n{\r\n    switch(action.type){\r\n        case ADD_ITEM: return [...state, action.payload.todoItem]; \r\n        case REMOVE_ITEM: return state.filter((item) => item.itemId !== action.payload.todoItemId);\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default todoReducer;\r\n","import todoReducer from './todoReducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n    todoList: todoReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from './redux/reducers/rootReducer';\nfunction saveToLocalStorage(state) {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializedState);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction loadFromLocalStorage() {\n  try {\n    const serializedState = localStorage.getItem(\"state\");\n    if (serializedState == null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (e) {\n    console.log(e);\n    return undefined;\n  }\n}\n\nconst persistedState = loadFromLocalStorage();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport let store = createStore(\n  rootReducer,\n  persistedState,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nstore.subscribe( () => {\n  saveToLocalStorage(store.getState());\n});\n\nReactDOM.render(\n  <Provider  store={store} >\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}