{"version":3,"sources":["common/constants.js","components/PriorityIcons/PriorityIcons.js","components/Card/CardItem.js","common/generateRandomUuid.js","components/Logo/logo.js","components/SideNavigationBar/SideNavigationBar.js","components/Dialog/Dialog.js","components/Menu/SaveTemplateDialog.js","components/RadioGroup/RadioGroup.js","components/Menu/LoadTemplateDialog.js","components/Menu/Menu.js","components/Todo/Todo.js","redux/actions/ActionTypes.js","components/Todo/TodoContainer.js","redux/actions/todoActions.js","redux/actions/templatesActions.js","App.js","redux/reducers/todoReducer.js","redux/reducers/templatesReducer.js","redux/reducers/rootReducer.js","index.js"],"names":["HIGH_PRIORITY","LOW_PRIORITY","MEDIUM_PRIORITY","TODO","DONE","withStyles","theme","highPriority","color","position","verticalAlign","top","fontSize","mediumPriority","lowPriority","classes","priority","className","root","margin","chip","borderRadius","padding","backgroundColor","chipTodo","chipDone","icon","cursor","doneTickIcon","props","label","status","itemId","onClick","onDelete","itemPriority","Chip","deleteIcon","generateRandomUuid","replace","c","r","Math","random","toString","Logo","style","userSelect","list","width","fullList","isOpen","onClose","Fragment","Drawer","anchor","open","role","List","ListItem","button","ListItemIcon","ListItemText","primary","Divider","Dialog","title","caption","primaryBtnLabel","primaryBtnAction","secondaryBtnLabel","secondaryBtnAction","children","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","autoFocus","SaveTemplateDialog","React","useState","templateName","setTemplateName","TextField","onChange","e","target","value","variant","placeholder","RadioGroup","options","onSelectValue","labelProp","valueProp","name","event","map","item","index","FormControlLabel","control","Radio","LoadTemplateDialog","templates","selectedTemplateId","setSelectedTemplateId","Menu","onClearAll","isListAvailable","onSaveTemplate","onLoadTemplate","isClearAllDialogOpen","setIsClearAllDialogOpen","isSaveTemplateOpen","setIsSaveTemplateOpen","isLoadTemplateOpen","setIsLoadTemplateOpen","Grid","container","direction","justifyContent","alignItems","spacing","menuBar","loadTemplateGrid","size","disabled","Boolean","length","loadTemplateButton","Cached","clearAllIcon","saveTemplateGrid","saveTemplateButton","Save","clearAllGrid","clearAllButton","DeleteForever","templateId","defaultProps","height","textTransform","paddingRight","logo","display","textAlign","marginTop","menuContainer","menuIcon","emptyList","appTitle","fontWeight","paddingLeft","header","marginBottom","grid1","grid2","grid3","inputContainer","input","textField","border","addButton","addButtonIcon","formControl","formSelect","borderBottom","todoList","card","todoListCard","addItem","removeItem","today","date","clearAllItems","saveTemplate","loadTemplate","addTaskTextField","useRef","todoItem","setTodoItem","setPriority","isMenuOpen","setIsMenuOpen","month","split","year","handleItemClick","ret","_","chain","find","merge","itemStatus","handleItemDelete","Typography","Card","inputRef","FormControl","Select","labelId","disableUnderline","MenuItem","IconButton","itemValue","current","focus","selectedTemplate","PriorityIcons","ADD_ITEM","REMOVE_ITEM","CLEAR_ALL_ITEMS","SAVE_TEMPLATE","LOAD_TEMPLATE","connect","state","Date","toDateString","dispatch","type","payload","todoItemId","completeItem","template","Parent","Component","initState","todoReducer","action","filter","templatesReducer","rootReducer","combineReducers","persistedState","serializedState","localStorage","getItem","JSON","parse","console","log","loadFromLocalStorage","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","subscribe","stringify","setItem","saveToLocalStorage","getState","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.a245ea87.chunk.js","sourcesContent":["export const HIGH_PRIORITY = \"HIGH_PRIORITY\";\r\nexport const LOW_PRIORITY = \"LOW_PRIORITY\";\r\nexport const MEDIUM_PRIORITY = \"MEDIUM_PRIORITY\";\r\nexport const TODO = \"To Do\";\r\nexport const DONE = \"Done\";\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport HighPriorityIcon from \"@material-ui/icons/NewReleases\";\r\nimport {} from \"../../common/constants\";\r\nimport { HIGH_PRIORITY, MEDIUM_PRIORITY } from \"./../../common/constants\";\r\n\r\nconst PriorityIcon = ({ classes, priority }) => {\r\n  return (\r\n    <HighPriorityIcon\r\n      className={\r\n        priority === HIGH_PRIORITY\r\n          ? classes.highPriority\r\n          : priority === MEDIUM_PRIORITY\r\n          ? classes.mediumPriority\r\n          : classes.lowPriority\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst styles = (theme) => ({\r\n  highPriority: {\r\n    color: \"red\",\r\n    position: 'relative',\r\n    verticalAlign: 'sub',\r\n    top: '-1px',\r\n    fontSize: '18px'\r\n  },\r\n  mediumPriority: {\r\n    color: \"yellow\",\r\n    position: 'relative',\r\n    verticalAlign: 'sub',\r\n    top: '-1px',\r\n    fontSize: '18px'\r\n  },\r\n  lowPriority: {\r\n    color: \"#55a630\",\r\n    position: 'relative',\r\n    verticalAlign: 'sub',\r\n    top: '-1px',\r\n    fontSize: '18px'\r\n  },\r\n  \r\n});\r\n\r\nexport default withStyles(styles)(PriorityIcon);\r\n","import React from \"react\";\r\nimport { withStyles, Chip } from \"@material-ui/core\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport { TODO } from \"../../common/constants\";\r\nimport PriorityIcon from \"../PriorityIcons/PriorityIcons\";\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\nconst CardItem = (props) => {\r\n  const { classes, label, status, itemId, onClick, onDelete, itemPriority } = props;\r\n\r\n  const handleItemClick = () => {\r\n    onClick(itemId);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n      onDelete(itemId);\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <Chip\r\n        icon={<DeleteOutlineIcon className={classes.icon} fontSize=\"small\" onClick={handleDelete} />}\r\n        className={status === TODO ? classes.chip : classes.chipDone}\r\n        color=\"primary\"\r\n        label={<span> {label} <PriorityIcon priority={itemPriority} /></span>}\r\n        onDelete={handleItemClick}\r\n        deleteIcon={status === TODO ? <CheckCircleOutlineIcon className={classes.chipTodo}/> :<CheckCircleIcon fontSize=\"large\" className={classes.doneTickIcon}/>}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: \"20px\",\r\n  },\r\n  chip: {\r\n    color: \"#f1faee\",\r\n    borderRadius: \"10px\",\r\n    fontSize: \"16px\",\r\n    padding: \"20px 5px 20px 5px\",\r\n    backgroundColor: \"#1d3557\",\r\n    '& .MuiChip-label': {\r\n      padding: \"10px 40px 10px 10px\"\r\n    }\r\n  },\r\n  chipTodo: {\r\n      color: '#f1faee'\r\n  },\r\n  chipDone: {\r\n    color: \"#f1faee\",\r\n    borderRadius: \"10px\",\r\n    backgroundColor: \"#55a630\",\r\n    fontSize: \"16px\",\r\n    padding: \"20px 5px 20px 5px\",\r\n    '& .MuiChip-label': {\r\n      padding: \"10px 40px 10px 10px\"\r\n    }\r\n  },\r\n  icon: {\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      color: 'red'\r\n    }\r\n  },\r\n  doneTickIcon: {\r\n    color: \"green\",\r\n    fontSize: \"20px\"\r\n  }\r\n});\r\nexport default withStyles(styles)(CardItem);\r\n","export function generateRandomUuid() {\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n    var r = (Math.random() * 16) | 0,\r\n      v = c === \"x\" ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n}\r\n","import React from 'react';\r\nimport './logo.scss';\r\n\r\nconst Logo = (props) => {\r\n    return ( \r\n        <>\r\n        <h4 style={{userSelect: 'none'}}><b><span>Let's  </span><span>DoIt</span></b></h4>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default Logo;","import { ListItem, List, ListItemIcon, ListItemText, Drawer, Divider} from '@material-ui/core';\r\nimport React from 'react';\r\nimport { withStyles } from '@material-ui/core';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nconst SideNavigationBar = ({isOpen, onClose}) => {\r\n  \r\n    const handleClose = () => {\r\n        onClose();\r\n    }\r\n    \r\n    const list = () => (\r\n      <div\r\n        role=\"presentation\"\r\n      >\r\n        <List>\r\n          {\r\n            <ListItem button key={'menu-item-1'}>\r\n              <ListItemIcon>{<InboxIcon />}</ListItemIcon>\r\n              <ListItemText primary={'Archives'} />\r\n            </ListItem>}\r\n        </List>\r\n        <Divider />\r\n      </div>\r\n    );\r\n  \r\n    return (\r\n      <div>\r\n          <React.Fragment key={'left-menu-bar'}>\r\n            <Drawer anchor={'left'} open={isOpen} onClose={handleClose}>\r\n                {list()}\r\n            </Drawer>\r\n          </React.Fragment>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const styles = theme =>({\r\n    list: {\r\n      width: 250,\r\n    },\r\n    fullList: {\r\n      width: 'auto',\r\n    },\r\n  });\r\n\r\n  export default withStyles(styles)(SideNavigationBar);","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog as MuiDialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\n\r\nconst Dialog = (props) => {\r\n  const {\r\n    title,\r\n    caption,\r\n    isOpen,\r\n    primaryBtnLabel,\r\n    primaryBtnAction,\r\n    secondaryBtnLabel,\r\n    secondaryBtnAction,\r\n    children\r\n  } = props;\r\n\r\n  const handleClickYes = () => {\r\n    primaryBtnAction();\r\n  };\r\n\r\n  const handleClickNo = () => {\r\n    secondaryBtnAction();\r\n  };\r\n\r\n  return (\r\n    <MuiDialog\r\n      open={isOpen}\r\n      onClose={secondaryBtnAction}\r\n      aria-labelledby=\"dialog-title\"\r\n      aria-describedby=\"dialog-description\"\r\n    >\r\n      <DialogTitle id=\"dialog-title\">{title}</DialogTitle>\r\n      {caption && (\r\n        <DialogContent>\r\n          <DialogContentText id=\"dialog-description\">\r\n            {caption}\r\n          </DialogContentText>\r\n          {children}\r\n        </DialogContent>\r\n      )}\r\n      {primaryBtnAction && secondaryBtnAction && (\r\n        <DialogActions>\r\n          <Button onClick={handleClickNo} color=\"default\">\r\n            {secondaryBtnLabel}\r\n          </Button>\r\n          <Button onClick={handleClickYes} color=\"primary\" autoFocus>\r\n          {primaryBtnLabel}\r\n          </Button>\r\n        </DialogActions>\r\n      )}\r\n    </MuiDialog>\r\n  );\r\n};\r\n\r\nexport default Dialog;\r\n","import React from \"react\";\r\nimport Dialog from \"../Dialog/Dialog\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nconst SaveTemplateDialog = ({\r\n  isOpen,\r\n  primaryBtnAction,\r\n  secondaryBtnAction,\r\n  className\r\n}) => {\r\n  const [templateName, setTemplateName] = React.useState('');\r\n\r\n  const handleTemplateChange = (e) => {\r\n    setTemplateName(e.target.value);\r\n  }\r\n\r\n  const handleDialogSubmit = () => {\r\n    primaryBtnAction(templateName);\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      isOpen={isOpen}\r\n      title=\"Save Template\"\r\n      caption=\"Please enter Template name\"\r\n      primaryBtnLabel={'Save'}\r\n      secondaryBtnLabel={'Cancel'}\r\n      primaryBtnAction={handleDialogSubmit}\r\n      secondaryBtnAction={secondaryBtnAction}\r\n    >\r\n      <TextField\r\n        id=\"template-input\"\r\n        onChange={handleTemplateChange}\r\n        className={className}\r\n        variant=\"outlined\"\r\n        placeholder={\"Template Name\"}\r\n      />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SaveTemplateDialog;\r\n","import React from \"react\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport MuiRadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\n\r\nexport const RadioGroup = ({value, options, onSelectValue, labelProp, valueProp}) => {\r\n\r\n  const handleTemplateChange = (event) => {\r\n    onSelectValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MuiRadioGroup\r\n        aria-label=\"templates\"\r\n        name=\"controlled-radio-buttons-group\"\r\n        value={value}\r\n        onChange={handleTemplateChange}\r\n      >\r\n        {options.map((item, index) => (\r\n            <FormControlLabel\r\n              key={index}\r\n              value={item[valueProp]}\r\n              control={<Radio />}\r\n              label={item[labelProp]}\r\n            />\r\n        ))}\r\n      </MuiRadioGroup>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Dialog from \"../Dialog/Dialog\";\r\nimport { RadioGroup } from \"../RadioGroup/RadioGroup\";\r\n\r\nconst LoadTemplateDialog = ({\r\n  isOpen,\r\n  primaryBtnAction,\r\n  secondaryBtnAction,\r\n  templates,\r\n  className,\r\n}) => {\r\n  const [selectedTemplateId, setSelectedTemplateId] = React.useState(\"\");\r\n\r\n  const handleTemplateChange = (id) => {\r\n    setSelectedTemplateId(id);\r\n  };\r\n\r\n  const handleDialogSubmit = () => {\r\n    primaryBtnAction(selectedTemplateId);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      isOpen={isOpen}\r\n      title={\"Select a Template\"}\r\n      caption={'This will replace the existing Todo Items'}\r\n      primaryBtnLabel={\"Confirm\"}\r\n      secondaryBtnLabel={\"Cancel\"}\r\n      primaryBtnAction={handleDialogSubmit}\r\n      secondaryBtnAction={secondaryBtnAction}\r\n    >\r\n      <RadioGroup\r\n        className={className}\r\n        value={selectedTemplateId}\r\n        options={templates}\r\n        onSelectValue={handleTemplateChange}\r\n        labelProp={'templateName'}\r\n        valueProp={'templateId'}\r\n      />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default LoadTemplateDialog;\r\n","import { Grid, Button, TextField } from \"@material-ui/core\";\r\nimport { DeleteForever, Save, Cached } from \"@material-ui/icons\";\r\nimport React, { useState } from \"react\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport Dialog from \"./../Dialog/Dialog\";\r\nimport { generateRandomUuid } from \"../../common/generateRandomUuid\";\r\nimport SaveTemplateDialog from \"./SaveTemplateDialog\";\r\nimport LoadTemplateDialog from \"./LoadTemplateDialog\";\r\n\r\nconst Menu = (props) => {\r\n  const {\r\n    classes,\r\n    onClearAll,\r\n    isListAvailable,\r\n    onSaveTemplate,\r\n    templates,\r\n    onLoadTemplate,\r\n  } = props;\r\n  const [isClearAllDialogOpen, setIsClearAllDialogOpen] = useState(false);\r\n  const [isSaveTemplateOpen, setIsSaveTemplateOpen] = useState(false);\r\n  const [isLoadTemplateOpen, setIsLoadTemplateOpen] = useState(false);\r\n\r\n  //Clear All Dialog Handlers\r\n  const handleClearAllClick = () => {\r\n    setIsClearAllDialogOpen(true);\r\n  };\r\n\r\n  const handleClearAllAgree = () => {\r\n    setIsClearAllDialogOpen(false);\r\n    onClearAll();\r\n  };\r\n\r\n  const handleClearAllClose = () => {\r\n    setIsClearAllDialogOpen(false);\r\n  };\r\n\r\n  //Save Template Dialog Handlers\r\n  const handleSaveTemplate = () => {\r\n    setIsSaveTemplateOpen(true);\r\n  };\r\n\r\n  const handleSaveTemplateAgree = (templateName) => {\r\n    setIsSaveTemplateOpen(false);\r\n    onSaveTemplate(templateName, generateRandomUuid());\r\n  };\r\n\r\n  const handleSaveTemplateClose = () => {\r\n    setIsSaveTemplateOpen(false);\r\n  };\r\n\r\n  //Load Template Dialog Handlers\r\n  const handleLoadTemplate = () => {\r\n    setIsLoadTemplateOpen(true);\r\n  };\r\n\r\n  const handleLoadTemplateAgree = (templateId) => {\r\n    setIsLoadTemplateOpen(false);\r\n    onLoadTemplate(templateId);\r\n  };\r\n\r\n  const handleLoadTemplateClose = () => {\r\n    setIsLoadTemplateOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"flex-end\"\r\n        alignItems=\"center\"\r\n        spacing={3}\r\n        className={classes.menuBar}\r\n      >\r\n        <Grid item className={classes.loadTemplateGrid}>\r\n          <Button\r\n            size=\"small\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled={!Boolean(templates.length)}\r\n            onClick={handleLoadTemplate}\r\n            className={classes.loadTemplateButton}\r\n          >\r\n            Load Template\r\n            <Cached className={classes.clearAllIcon} fontSize=\"small\" />\r\n          </Button>\r\n        </Grid>\r\n        <Grid item className={classes.saveTemplateGrid}>\r\n          <Button\r\n            size=\"small\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleSaveTemplate}\r\n            disabled={!isListAvailable}\r\n            className={classes.saveTemplateButton}\r\n          >\r\n            Save as Template\r\n            <Save className={classes.clearAllIcon} fontSize=\"small\" />\r\n          </Button>\r\n        </Grid>\r\n        <Grid item className={classes.clearAllGrid}>\r\n          <Button\r\n            size=\"small\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleClearAllClick}\r\n            disabled={!isListAvailable}\r\n            className={classes.clearAllButton}\r\n          >\r\n            Clear All\r\n            <DeleteForever className={classes.clearAllIcon} fontSize=\"small\" />\r\n          </Button>\r\n        </Grid>\r\n        <Dialog\r\n          isOpen={isClearAllDialogOpen}\r\n          title={\"Confirm Clear All?\"}\r\n          caption={\"This will delete all your to-do items beyond recovery\"}\r\n          primaryBtnLabel={\"Yes\"}\r\n          secondaryBtnLabel={\"No\"}\r\n          primaryBtnAction={handleClearAllAgree}\r\n          secondaryBtnAction={handleClearAllClose}\r\n        />\r\n        <SaveTemplateDialog\r\n          isOpen={isSaveTemplateOpen}\r\n          primaryBtnAction={handleSaveTemplateAgree}\r\n          secondaryBtnAction={handleSaveTemplateClose}\r\n        />\r\n        <LoadTemplateDialog\r\n          isOpen={isLoadTemplateOpen}\r\n          templates={templates}\r\n          primaryBtnAction={handleLoadTemplateAgree}\r\n          secondaryBtnAction={handleLoadTemplateClose}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = (theme) => ({\r\n  menuBar: {\r\n    width: \"100%\",\r\n    margin: \"0px\",\r\n    padding: \"10px\",\r\n    height: \"40px\",\r\n    borderRadius: \"20px 20px 0px 0px\",\r\n  },\r\n  clearAllGrid: {\r\n    padding: \"0px !important\",\r\n  },\r\n  clearAllButton: {\r\n    textTransform: \"none\",\r\n    fontSize: \"12px\",\r\n    backgroundColor: \"#e63946\",\r\n    borderRadius: \"5px 20px 5px 5px\",\r\n  },\r\n  loadTemplateGrid: {\r\n    padding: \"0px !important\",\r\n    paddingRight: \"7px !important\",\r\n  },\r\n  saveTemplateGrid: {\r\n    padding: \"0px !important\",\r\n    paddingRight: \"7px !important\",\r\n  },\r\n  loadTemplateButton: {\r\n    textTransform: \"none\",\r\n    backgroundColor: \"#e63946\",\r\n    fontSize: \"12px\",\r\n    borderRadius: \"20px 5px 5px 5px\",\r\n  },\r\n  saveTemplateButton: {\r\n    textTransform: \"none\",\r\n    fontSize: \"12px\",\r\n    backgroundColor: \"#e63946\",\r\n    borderRadius: \"5px 5px 5px 5px\",\r\n  },\r\n  clearAllIcon: {\r\n    verticalAlign: \"top\",\r\n    position: \"relative\",\r\n    top: \"-1px\",\r\n  },\r\n});\r\n\r\nMenu.defaultProps = {\r\n  templates: [],\r\n};\r\n\r\nexport default withStyles(styles)(Menu);\r\n","import React from \"react\";\r\nimport {\r\n  Typography,\r\n  withStyles,\r\n  TextField,\r\n  Grid,\r\n  Card,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport _ from \"lodash\";\r\nimport CardItem from \"../Card/CardItem\";\r\nimport { generateRandomUuid } from \"../../common/generateRandomUuid\";\r\nimport {\r\n  HIGH_PRIORITY,\r\n  LOW_PRIORITY,\r\n  MEDIUM_PRIORITY,\r\n} from \"../../common/constants\";\r\nimport PriorityIcon from \"../PriorityIcons/PriorityIcons\";\r\nimport PriorityIcons from \"../PriorityIcons/PriorityIcons\";\r\nimport Logo from \"../Logo/logo\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SideNavigationBar from \"../SideNavigationBar/SideNavigationBar\";\r\nimport { TODO, DONE } from \"../../common/constants\";\r\nimport Menu from \"../Menu/Menu\";\r\n\r\nconst Todo = (props) => {\r\n  const {\r\n    classes,\r\n    addItem,\r\n    removeItem,\r\n    todoList,\r\n    date: today,\r\n    clearAllItems,\r\n    saveTemplate,\r\n    loadTemplate,\r\n    templates\r\n  } = props;\r\n  const addTaskTextField = React.useRef(null);\r\n  const [todoItem, setTodoItem] = React.useState(\"\");\r\n  const [priority, setPriority] = React.useState(MEDIUM_PRIORITY);\r\n  const [isMenuOpen, setIsMenuOpen] = React.useState(false);\r\n  const month = today.split(\" \")[1];\r\n  const date = today.split(\" \")[2];\r\n  const year = today.split(\" \")[3];\r\n\r\n  const handleItemChange = (e) => {\r\n    setTodoItem(e.target.value);\r\n  };\r\n\r\n  const handleItemAdd = () => {\r\n    addItem({\r\n      itemId: generateRandomUuid(),\r\n      itemValue: todoItem,\r\n      itemStatus: TODO,\r\n      itemPriority: priority,\r\n    });\r\n    setTodoItem(\"\");\r\n    if (addTaskTextField.current) {\r\n      addTaskTextField.current.focus();\r\n    }\r\n  };\r\n\r\n  const handleItemClick = (itemId) => {\r\n    const ret = _.chain(todoList)\r\n      .find({ itemId: itemId })\r\n      .merge({ itemStatus: DONE })\r\n      .value();\r\n    removeItem(itemId);\r\n    addItem(ret);\r\n  };\r\n\r\n  const handleItemDelete = (itemId) => {\r\n    removeItem(itemId);\r\n  };\r\n\r\n  const handlePriorityChange = (e) => {\r\n    setPriority(e.target.value);\r\n  };\r\n\r\n  const handleMenuClick = () => {\r\n    setIsMenuOpen(true);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setIsMenuOpen(false);\r\n  };\r\n\r\n  const handleClearAll = () => {\r\n    clearAllItems();\r\n  };\r\n\r\n  const handleSaveTemplate = (templateName, templateId) => {\r\n    saveTemplate({ templateName, templateId, todoList});\r\n  };\r\n\r\n  const handleLoadTemplate = (templateId) => {\r\n      const selectedTemplate = templates.find(item=> item.templateId === templateId);\r\n      loadTemplate(selectedTemplate.todoList);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.header}>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"flex-start\"\r\n          alignItems=\"center\"\r\n          spacing={3}\r\n          className={classes.inputContainer}\r\n        >\r\n          <Grid\r\n            onClick={handleMenuClick}\r\n            item\r\n            className={classes.menuContainer}\r\n          >\r\n            {\" \"}\r\n            <MenuIcon fontSize=\"large\" className={classes.menuIcon} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Logo />{\" \"}\r\n            <Typography className={classes.appTitle} variant=\"caption\">\r\n              {`${month} ${date} ${year}`}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <div className={classes.input}>\r\n        <Card className={classes.card}>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\"\r\n            spacing={3}\r\n            className={classes.inputContainer}\r\n          >\r\n            <Grid item className={classes.grid1}>\r\n              <TextField\r\n                value={todoItem}\r\n                id=\"input\"\r\n                inputRef={addTaskTextField}\r\n                className={classes.textField}\r\n                variant=\"outlined\"\r\n                onChange={handleItemChange}\r\n                placeholder={\"What's on your list..\"}\r\n              />\r\n            </Grid>\r\n            <Grid item className={classes.grid2}>\r\n              <FormControl className={classes.formControl}>\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  onChange={handlePriorityChange}\r\n                  value={priority}\r\n                  className={classes.formSelect}\r\n                  disableUnderline\r\n                >\r\n                  <MenuItem value={HIGH_PRIORITY}>\r\n                    <PriorityIcon priority={HIGH_PRIORITY} />\r\n                  </MenuItem>\r\n                  <MenuItem value={MEDIUM_PRIORITY}>\r\n                    <PriorityIcon priority={MEDIUM_PRIORITY} />\r\n                  </MenuItem>\r\n                  <MenuItem value={LOW_PRIORITY}>\r\n                    <PriorityIcon priority={LOW_PRIORITY} />\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item className={classes.grid3}>\r\n              <IconButton\r\n                aria-label=\"add-item\"\r\n                className={classes.addButton}\r\n                size=\"small\"\r\n                onClick={handleItemAdd}\r\n              >\r\n                <DoneIcon className={classes.addButtonIcon} fontSize=\"small\" />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Card>\r\n        <div className={classes.todoList}>\r\n          <Card className={classes.todoListCard}>\r\n            <Menu\r\n              onSaveTemplate={handleSaveTemplate}\r\n              isListAvailable={Boolean(todoList.length)}\r\n              onClearAll={handleClearAll}\r\n              onLoadTemplate={handleLoadTemplate}\r\n              templates={templates}\r\n            />\r\n            {todoList.map((todoItem, index) => (\r\n              <CardItem\r\n                itemId={todoItem.itemId}\r\n                itemPriority={todoItem.itemPriority}\r\n                onClick={handleItemClick}\r\n                onDelete={handleItemDelete}\r\n                key={index}\r\n                label={todoItem.itemValue}\r\n                status={todoItem.itemStatus}\r\n              />\r\n            ))}\r\n            {todoList.length === 0 && (\r\n              <p className={classes.emptyList}>\r\n                <PriorityIcons priority={HIGH_PRIORITY} /> Rest in the end, not\r\n                in the Middle.\r\n              </p>\r\n            )}\r\n          </Card>\r\n          {/* {todoList.length === 0 && <p>It Feels empty here :(</p>} */}\r\n        </div>\r\n      </div>\r\n      <SideNavigationBar onClose={handleMenuClose} isOpen={isMenuOpen} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    margin: \"auto\",\r\n    padding: \"10px\",\r\n  },\r\n  logo: {\r\n    width: \"60px\",\r\n    height: \"30px\",\r\n    display: \"inline-block\",\r\n  },\r\n\r\n  title: {\r\n    textAlign: \"center\",\r\n    // border: '1px solid red',\r\n    borderRadius: \"10px\",\r\n    marginTop: \"10%\",\r\n    padding: \"10px 10px 0px 10px\",\r\n    color: \"#f1faee\",\r\n  },\r\n  menuContainer: {\r\n    padding: \"0px !important\",\r\n  },\r\n  menuIcon: {\r\n    color: \"#f1faee\",\r\n    verticalAlign: \"bottom\",\r\n    position: \"relative\",\r\n    top: \"-10px\",\r\n  },\r\n  emptyList: {\r\n    textAlign: \"center\",\r\n    color: \"#e63946\",\r\n  },\r\n  appTitle: {\r\n    fontWeight: \"600\",\r\n    paddingLeft: \"2%\",\r\n    textAlign: \"center\",\r\n    color: \"#f1faee\",\r\n  },\r\n  header: {\r\n    margin: \"2%\",\r\n    marginBottom: \"15%\",\r\n  },\r\n  grid1: {\r\n    padding: \"12px !important\",\r\n  },\r\n  grid2: {\r\n    padding: \"12px !important\",\r\n  },\r\n  grid3: {\r\n    padding: \"12px 0px !important\",\r\n  },\r\n  inputContainer: {\r\n    padding: \"10px\",\r\n  },\r\n  input: {\r\n    margin: \"2%\",\r\n  },\r\n  textField: {\r\n    \"& .MuiInputBase-root\": {\r\n      borderRadius: \"20px\",\r\n      width: \"100%\",\r\n      height: \"50px\",\r\n      backgroundColor: \"#f1faee\",\r\n    },\r\n    \"&:hover\": {\r\n      border: \"#e63946\",\r\n    },\r\n  },\r\n  addButton: {\r\n    padding: \"10px\",\r\n    borderRadius: \"18px\",\r\n    backgroundColor: \"#e63946\",\r\n    color: \"#f1faee\",\r\n  },\r\n  addButtonIcon: {\r\n    borderRadius: \"10px\",\r\n  },\r\n  formControl: {\r\n    width: \"100%\",\r\n  },\r\n  formSelect: {\r\n    \"&\": {\r\n      borderBottom: \"none\",\r\n    },\r\n  },\r\n  todoList: {\r\n    width: \"100%\",\r\n    margin: \"auto\",\r\n  },\r\n  card: {\r\n    borderRadius: \"20px\",\r\n    backgroundColor: \"#a8dadc\",\r\n  },\r\n  todoListCard: {\r\n    borderRadius: \"20px\",\r\n    marginTop: \"10px\",\r\n    backgroundColor: \"#a8dadc\",\r\n  },\r\n});\r\nexport default withStyles(styles)(Todo);\r\n","export const ADD_ITEM = 'ADD_ITEM';\r\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\r\nexport const COMPLETE_ITEM = 'COMPLETE_ITEM';\r\nexport const CLEAR_ALL_ITEMS = 'CLEAR_ALL_ITEMS';\r\nexport const SAVE_TEMPLATE = 'SAVE_TEMPLATE';\r\nexport const LOAD_TEMPLATE = 'LOAD_TEMPLATE';\r\n\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Todo from \"./Todo\";\r\nimport {\r\n  addItem,\r\n  removeItem,\r\n  completeItem,\r\n  clearAllItems,\r\n} from \"./../../redux/actions/todoActions\";\r\nimport { loadTemplate, saveTemplate } from \"../../redux/actions/templatesActions\";\r\n\r\nconst TodoContainer = (props) => {\r\n  return (\r\n    <>\r\n      <Todo {...props} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  todoList: state.todoList,\r\n  date: new Date().toDateString(),\r\n  templates: state.templates\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addItem: (todoItem) => dispatch(addItem(todoItem)),\r\n  removeItem: (todoItem) => dispatch(removeItem(todoItem)),\r\n  completeItem: (todoItem) => dispatch(completeItem(todoItem)),\r\n  clearAllItems: () => dispatch(clearAllItems()),\r\n  saveTemplate: (template) => dispatch(saveTemplate(template)),\r\n  loadTemplate: (todoList) => dispatch(loadTemplate(todoList))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoContainer);\r\n","import { DONE } from \"../../common/constants\"\r\nimport { ADD_ITEM, CLEAR_ALL_ITEMS, COMPLETE_ITEM, REMOVE_ITEM } from \"./ActionTypes\"\r\n\r\nexport function addItem(todoItem)\r\n{\r\n    return {\r\n        type: ADD_ITEM,\r\n        payload: {\r\n            todoItem: todoItem\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeItem(todoItemId)\r\n{\r\n    return {\r\n        type: REMOVE_ITEM,\r\n        payload: {\r\n            todoItemId\r\n        }\r\n    }\r\n}\r\n\r\nexport function completeItem(todoItem)\r\n{\r\n    return {\r\n        type: COMPLETE_ITEM,\r\n        payload: {\r\n            todoItem: {...todoItem, itemStatus: DONE}\r\n        }\r\n    }\r\n}\r\n\r\nexport function clearAllItems(){\r\n    return {\r\n        type: CLEAR_ALL_ITEMS,\r\n        payload: {}\r\n    }\r\n}\r\n","import { SAVE_TEMPLATE, LOAD_TEMPLATE } from \"./ActionTypes\";\r\n\r\nexport function saveTemplate(template){\r\n    return {\r\n        type: SAVE_TEMPLATE,\r\n        payload: {\r\n            template\r\n        }\r\n    }\r\n}\r\n\r\nexport function loadTemplate(todoList){\r\n    return {\r\n        type: LOAD_TEMPLATE,\r\n        payload: {\r\n            todoList\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\nimport TodoContainer from \"./components/Todo/TodoContainer\";\n\nexport const RESTART = \"RESTART\";\nexport const PREV = \"PREV\";\nexport const NEXT = \"NEXT\";\nclass Parent extends Component {\n  render() {\n    return (\n      <>\n        <TodoContainer />\n      </>\n    );\n  }\n}\n\nexport default Parent;\n","import { ADD_ITEM, CLEAR_ALL_ITEMS, LOAD_TEMPLATE, REMOVE_ITEM } from '../actions/ActionTypes';\r\nconst initState = [];\r\n\r\nconst todoReducer = (state=initState, action) =>\r\n{\r\n    switch(action.type){\r\n        case ADD_ITEM: return [...state, action.payload.todoItem]; \r\n        case REMOVE_ITEM: return state.filter((item) => item.itemId !== action.payload.todoItemId);\r\n        case CLEAR_ALL_ITEMS: return [];\r\n        case LOAD_TEMPLATE: return action.payload.todoList\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default todoReducer;\r\n","\r\nimport { SAVE_TEMPLATE } from '../actions/ActionTypes';\r\nconst initState = [];\r\n\r\nconst templatesReducer = (state=initState, action) =>\r\n{\r\n    switch(action.type){\r\n        case SAVE_TEMPLATE: return [...state, action.payload.template]\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default templatesReducer;\r\n","import todoReducer from './todoReducer';\r\nimport { combineReducers } from 'redux';\r\nimport templatesReducer from './templatesReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    templates: templatesReducer,\r\n    todoList: todoReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from './redux/reducers/rootReducer';\nfunction saveToLocalStorage(state) {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializedState);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction loadFromLocalStorage() {\n  try {\n    const serializedState = localStorage.getItem(\"state\");\n    if (serializedState == null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (e) {\n    console.log(e);\n    return undefined;\n  }\n}\n\nconst persistedState = loadFromLocalStorage();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport let store = createStore(\n  rootReducer,\n  persistedState,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nstore.subscribe( () => {\n  saveToLocalStorage(store.getState());\n});\n\nReactDOM.render(\n  <Provider  store={store} >\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}